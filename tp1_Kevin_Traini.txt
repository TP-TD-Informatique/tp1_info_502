TP1 info502
Kevin Traini

Question 1
==========

1. La commande pour lister tout les fichiers .h ou .c est $ ls *.[ch]

2. La commande pour lister tout les fichiers qui n'ont pas un . en avant dernier caractère est $ ls *[!.]?


Question 2
==========

1. La commande $ ls *!(.jpg|.jpeg) doit afficher tout les fichiers qui vont avec *, sauf les fichiers qui sont exactement .jpg ou .jpeg.

2. Pour afficher tout les fichiers sauf ceux dont l'extension est .jpg ou .jpeg, il faut taper $ ls !(*.jpg|*.jpeg)


Question 3
==========

1. Avec la commande $ grep '\(aa\)*' test.txt ou $ grep -E '(aa)*' test.txt toutes les lignes contenant des 'a' sont affichés

2. Avec la comande $ grep --color -E '(aa)*' test.txt toutes les lignes du fichier sont affichés, et les motifs reconnu sont mis en valeur avec une coloration. La ligne 'aaa' est reconnu car elle contient 'aa'.

3. Pour reconnaitre seulement les lignes qui contiennent exactement un nombre pair de 'a', la commande est $ grep -E '^(aa)*$' test.txt


Question 4
==========

1. L'expression régulière pour les mots qui contiennent les lettres a, b, c, d et e dans l'ordre est '^(.*a.*b.*c.*d.*e.*)$'. Le mot renvoyé est 'absconded'.


Question 5
==========

1. L'expression régulière pour les mots qui contiennent une lettre doublée est '^.*(.)\1.*$'

2. Pour éviter les mots avec une majuscule au début, on rajoute [a-z] au début de la regex '^[a-z].*(.)\1.*$'


Question 6
==========

1. L'expression régulière '^.*([^s].*)\1{5}$' liste touts les mots qui contiennent 6 fois la même lettre qui n'est pas un 's'. Aucun mot ne correspond à cette regex.


Question 7 (bonus)
==================

1. L'expression régulière '^\(aaa*\)\1\1*$' correspond au chaines de 'a' d'au moins 4 'a'. Le groupe 'aaa*' demande 2 'a' au moins, on répète ce groupe 1 fois, ce qui nous fait au moins 4 'a', et après on rajoute autant de fois qu'on veut ce groupe. Donc ce regex reconnait les chaines de 'a' d'une longueur de 4 minimum.
