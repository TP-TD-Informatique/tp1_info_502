TP1 info502
Kevin Traini

Question 1
==========

1. La commande pour lister tout les fichiers .h ou .c est $ ls *.[ch]

2. La commande pour lister tout les fichiers qui n'ont pas un . en avant dernier caractère est $ ls *[!.]?


Question 2
==========

1. La commande $ ls *!(.jpg|.jpeg) doit afficher tout les fichiers qui vont avec *, sauf les fichiers qui sont exactement .jpg ou .jpeg.

2. Pour afficher tout les fichiers sauf ceux dont l'extension est .jpg ou .jpeg, il faut taper $ ls !(*.jpg|*.jpeg)


Question 3
==========

1. Avec la commande $ grep '\(aa\)*' test.txt ou $ grep -E '(aa)*' test.txt toutes les lignes contenant des 'a' sont affichés

2. Avec la comande $ grep --color -E '(aa)*' test.txt toutes les lignes du fichier sont affichés, et les motifs reconnu sont mis en valeur avec une coloration. La ligne 'aaa' est reconnu car elle contient 'aa'.

3. Pour reconnaître seulement les lignes qui contiennent exactement un nombre pair de 'a', la commande est $ grep -E '^(aa)*$' test.txt


Question 4
==========

1. L'expression régulière pour les mots qui contiennent les lettres a, b, c, d et e dans l'ordre est '^(.*a.*b.*c.*d.*e.*)$'. Le mot renvoyé est 'absconded'.


Question 5
==========

1. L'expression régulière pour les mots qui contiennent une lettre doublée est '^.*(.)\1.*$'

2. Pour éviter les mots avec une majuscule au début, on rajoute [a-z] au début de la regex '^[a-z].*(.)\1.*$'


Question 6
==========

1. L'expression régulière '^.*([^s])(.*\1){5}.*$' liste touts les mots qui contiennent 6 fois la même lettre qui n'est pas un 's'. 2 mots correspondent : indivisibility et indivisibility's


Question 7 (bonus)
==================

1. L'expression régulière '^\(aaa*\)\1\1*$' correspond au chaînes de 'a' d'au moins 4 'a'. Le groupe 'aaa*' demande 2 'a' au moins, on répète ce groupe 1 fois, ce qui nous fait au moins 4 'a', et après on rajoute autant de fois qu'on veut ce groupe. Donc ce regex reconnait les chaines de 'a' d'une longueur de 4 minimum.


Question 8
==========

1. La commande permettant de satisfaire les mots commençant et finissant par la même lettre, et les mots ayant au moins 5 fois la même lettre est $ grep -E '^(.).*\1$' american-english | grep -E '^.*(.)(.*\1){4,}.*$'.
Les mots sont : abracadabra dispossessed effervescence nonintervention salaciousness's sassafras's sassafrases schoolmistress's schoolmistresses seamstress's seamstresses seasickness's secessionist's secessionists selfishness's selflessness selflessness's senselessness senselessness's sensitiveness's sensuousness sensuousness's seriousness's shapelessness shapelessness's sheepishness's shiftlessness shiftlessness's shortsightedness's sleeplessness sleeplessness's sluggishness's snobbishness's spaciousness's sparseness's spotlessness spotlessness's spuriousness's squeamishness's steadfastness's strenuousness's stylishness's sunglasses's


Question 9
==========

1. Pour afficher tout les processus concernant les navigateurs internet, la commande est $ ps aux | grep -E '(firefox|chromium|safari|opera)'. Cette commande affiche également le processus de la commande, nous avons donc une ligne en trop qu'il faut enlever. On remarque que toutes les lignes contiennent une colonne 'Sl', sauf celle qu'on veut enlever qui contient 'S+', donc on rajoute la commande $ | grep -v 'S+' a la fin pour enlever la ligne en trop.


Question 10
===========

1. La regex pour les lignes qui finissent par des espaces ou des tabulation est '^.*[ \t]+$'

2. La regex pour les lignes qui commencent par une tabulation est '^\t.*$'


Question 11
===========

1. La regex pour chercher toutes les lignes qui commencent par des espaces est '^( )+(.*)$', on remplace ensuite ces lignes par le deuxième groupe '\2'


Question 12 (bonus)
===================

1. La regex pour indentifier toutes les parenthèses avec leurs contenus est (\([^()]*\)), il suffit ensuite de ne rien mettre dans le 'remplacer par' pour les supprimer.

2. Les espaces sont déjà géré par la regex donné dans le 1 en donnant le groupe tout sauf des parenthèses à l'intérieur des parenthèses.

3. Si il y a des parenthèses imbriqué cela ne prendra que le parenthèses qui sont tout en bas dans l'imbrication, il faudra donc faire tourner le 'cherche/remplacer' autant de fois qu'il y a de niveau d'imbrication.


Question 13
===========

1. La regex pour indentifier les 2 colonnes est '^(.*), (.*)$', on peut ensuite échanger les 2 colonnes en mettant '\2, \1' dans le champs remplacer
